apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask
  namespace: devops-demo
  labels:
    app: flask
spec:
  replicas: 3
  selector:
    matchLabels:
      app: flask
  template:
    metadata:
      labels:
        app: flask
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
      containers:
      - name: devops-demo-backend
        image: $REGISTRY_URL/$REGISTRY_NAME}:$IMAGE_NAME
        ports:
        - name: http
          containerPort: 80
        imagePullPolicy: IfNotPresent
      nodeSelector:
        kubernetes.io/os: linux
      imagePullSecrets:
      - name: devops-demo-registry-credentials
---
apiVersion: v1
kind: Service
metadata:
  name: flask-cluster-ip
spec:
  type: ClusterIP
  selector:
    app: flask
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: flask-nodeport
spec:
  type: NodePort
  selector:
    app: flask
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: flask-loadbalancer
spec:
  type: LoadBalancer
  selector:
    app: flask
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
